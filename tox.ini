# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
# Users running macOS may need to install libomp.  If using the Homebrew
# package manager then this can be achieved with "brew install libomp".

[tox]
envlist = {py39,py310,py311,py312}-{lightgbm,keras,pandas,pytorch,sklearn,xgboost,no_deps,all_deps}-{gurobi10,gurobi11},pre-commit,docs,examples-{gurobi10,gurobi11}
isolated_build = True

[gh-actions]
python =
    3.9: py39-all_deps-gurobi11
    3.10: py310-all_deps-gurobi11
    3.12: py312-all_deps-gurobi11
    3.11: pre-commit, docs,py311-{lightgbm,keras,pytorch,sklearn,xgboost,no_deps,all_deps}-{gurobi10,gurobi11}

[testenv:docs]
deps=
    -r{toxinidir}/docs/requirements.txt
changedir = {toxinidir}/docs
allowlist_externals = /usr/bin/make
commands =
    make html

[testenv:examples-{gurobi10,gurobi11}]
deps =
    -r{toxinidir}/requirements.tox.txt
    -r{toxinidir}/requirements.keras.txt
    -r{toxinidir}/requirements.pytorch.txt
    -r{toxinidir}/requirements.sklearn.txt
    -r{toxinidir}/requirements.pandas.txt
    -r{toxinidir}/requirements.xgboost.txt
    notebook
    matplotlib
    ipywidgets
    seaborn
    gurobi10: gurobipy==10.0.3
    gurobi11: gurobipy==11.0.1

changedir = {toxinidir}/notebooks
allowlist_externals = /usr/bin/make
commands =
    make

[testenv:pre-commit]
skip_install = true
deps = pre-commit
commands = pre-commit run --all-files --show-diff-on-failure

[testenv:coverage]
commands = pytest --cov=src/gurobi_ml --cov-append --cov-report=term-missing tests/
depends =
  {py39,py310,py311}: clean
  report: py39,py310,py311

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report --omit='/tmp/*,/private/*'
    coverage html --omit='/tmp/*,/private/*'

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[base]
deps =
    -r{toxinidir}/requirements.tox.txt
    pytest
    pytest-subtests
    pytest-cov
    joblib
    gurobi10: gurobipy==10.0.3
    gurobi11: gurobipy==11.0.1

[testenv:{py39,py310,py311,py312}-keras-{gurobi10,gurobi11}]
deps =
    {[base]deps}
    -r{toxinidir}/requirements.keras.txt
commands =
    pytest tests/test_keras

[testenv:{py39,py310,py311,py312}-pytorch-{gurobi10,gurobi11}]
deps =
    {[base]deps}
    -r{toxinidir}/requirements.pytorch.txt
commands =
    pytest tests/test_pytorch

[testenv:{py39,py310,py311,py312}-sklearn-{gurobi10,gurobi11}]
deps =
    {[base]deps}
    -r{toxinidir}/requirements.sklearn.txt
commands =
    pytest tests/test_sklearn

[testenv:{py39,py310,py311,py312}-xgboost-{gurobi10,gurobi11}]
deps =
    {[base]deps}
    -r{toxinidir}/requirements.sklearn.txt
    -r{toxinidir}/requirements.xgboost.txt
commands =
    pytest tests/test_xgboost

[testenv:{py39,py310,py311,py312}-lightgbm-{gurobi10,gurobi11}]
deps =
    {[base]deps}
    -r{toxinidir}/requirements.lightgbm.txt
    -r{toxinidir}/requirements.sklearn.txt
commands =
    pytest tests/test_lightgbm

[testenv:{py39,py310,py311,py312}-no_deps]
deps =
    pytest
commands =
    pytest tests/test_no_deps

[testenv:{py39,py310,py311,py312}-pandas-{gurobi10,gurobi11}]
deps =
    {[base]deps}
    -r{toxinidir}/requirements.pandas.txt
    -r{toxinidir}/requirements.sklearn.txt
commands =
    pytest tests/test_pandas

[testenv:{py39,py310,py311,py312}-all_deps-{gurobi10,gurobi11}]
deps =
    {[base]deps}
    -r{toxinidir}/requirements.keras.txt
    -r{toxinidir}/requirements.pytorch.txt
    -r{toxinidir}/requirements.sklearn.txt
    -r{toxinidir}/requirements.pandas.txt
    -r{toxinidir}/requirements.xgboost.txt
    -r{toxinidir}/requirements.lightgbm.txt
commands =
    pytest tests/test_sklearn \
           tests/test_keras \
           tests/test_xgboost \
           tests/test_pytorch \
           tests/test_lightgbm \
           tests/test_pandas

[testenv]
setenv =
    PIP_EXTRA_INDEX_URL = https://download.pytorch.org/whl/cpu
passenv =
    GRB_LICENSE_FILE
allowlist_externals =
    echo
